{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\\\crr7\\\\hamad28\\\\src\\\\pages\\\\AllQutes.js\";\nimport { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport QuteDetail from \"./QuteDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQutes = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"this is all qutes page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/qutes/qutedet\",\n      children: /*#__PURE__*/_jsxDEV(QuteDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AllQutes;\nexport default AllQutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQutes\");","map":{"version":3,"names":["Fragment","Route","QuteDetail","AllQutes"],"sources":["C:/Users/user/Desktop/react/crr7/hamad28/src/pages/AllQutes.js"],"sourcesContent":["import { Fragment } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport QuteDetail from \"./QuteDetail\";\r\nconst AllQutes = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>this is all qutes page</h1>\r\n      <Route path='/qutes/qutedet'>\r\n          <QuteDetail></QuteDetail>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AllQutes;\r\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EACrB,oBACE,QAAC,QAAD;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,IAAI,EAAC,gBAAZ;MAAA,uBACI,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CATD;;KAAMA,Q;AAWN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}