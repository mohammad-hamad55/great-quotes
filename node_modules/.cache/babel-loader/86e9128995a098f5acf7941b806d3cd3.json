{"ast":null,"code":"import _slicedToArray from\"C:/Users/user/Desktop/react/crr7/hamad28/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState,Fragment}from\"react\";import{Prompt}from\"react-router-dom\";import Card from\"../UI/Card\";import LoadingSpinner from\"../UI/LoadingSpinner\";import classes from\"./QuoteForm.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteForm=function QuoteForm(props){var authorInputRef=useRef();var textInputRef=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),formActive=_useState2[0],setActive=_useState2[1];function submitFormHandler(event){event.preventDefault();var enteredAuthor=authorInputRef.current.value;var enteredText=textInputRef.current.value;// optional: Could validate here\nprops.onAddQuote({author:enteredAuthor,text:enteredText});}var clickBtnHandler=function clickBtnHandler(){setActive(false);};var focusHandler=function focusHandler(){setActive(true);};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Prompt,{when:formActive,message:function message(location){return'are you sure?';}}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"form\",{onFocus:focusHandler,className:classes.form,onSubmit:submitFormHandler,children:[props.isLoading&&/*#__PURE__*/_jsx(\"div\",{className:classes.loading,children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"author\",children:\"Author\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"author\",ref:authorInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"text\",rows:\"5\",ref:textInputRef})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{onClick:clickBtnHandler,className:\"btn\",children:\"Add Quote\"})})]})})]});};export default QuoteForm;","map":{"version":3,"names":["useRef","useState","Fragment","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","authorInputRef","textInputRef","formActive","setActive","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","clickBtnHandler","focusHandler","location","form","isLoading","loading","control","actions"],"sources":["C:/Users/user/Desktop/react/crr7/hamad28/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { useRef, useState, Fragment } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [formActive, setActive] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const clickBtnHandler=()=>{\n    setActive(false);\n  }\n  const focusHandler = () => {\n    setActive(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt when={formActive} message={(location)=>'are you sure?'}></Prompt>\n      <Card>\n        <form\n          onFocus={focusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={clickBtnHandler} className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":"8HAAA,OAASA,MAAT,CAAiBC,QAAjB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,kBAAvB,CAEA,MAAOC,KAAP,KAAiB,YAAjB,CACA,MAAOC,eAAP,KAA2B,sBAA3B,CACA,MAAOC,QAAP,KAAoB,wBAApB,C,wFAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,KAAD,CAAW,CAC3B,GAAMC,eAAc,CAAGT,MAAM,EAA7B,CACA,GAAMU,aAAY,CAAGV,MAAM,EAA3B,CACA,cAAgCC,QAAQ,CAAC,KAAD,CAAxC,wCAAOU,UAAP,eAAmBC,SAAnB,eAEA,QAASC,kBAAT,CAA2BC,KAA3B,CAAkC,CAChCA,KAAK,CAACC,cAAN,GAEA,GAAMC,cAAa,CAAGP,cAAc,CAACQ,OAAf,CAAuBC,KAA7C,CACA,GAAMC,YAAW,CAAGT,YAAY,CAACO,OAAb,CAAqBC,KAAzC,CAEA;AAEAV,KAAK,CAACY,UAAN,CAAiB,CAAEC,MAAM,CAAEL,aAAV,CAAyBM,IAAI,CAAEH,WAA/B,CAAjB,EACD,CACD,GAAMI,gBAAe,CAAC,QAAhBA,gBAAgB,EAAI,CACxBX,SAAS,CAAC,KAAD,CAAT,CACD,CAFD,CAGA,GAAMY,aAAY,CAAG,QAAfA,aAAe,EAAM,CACzBZ,SAAS,CAAC,IAAD,CAAT,CACD,CAFD,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EAAQ,IAAI,CAAED,UAAd,CAA0B,OAAO,CAAE,iBAACc,QAAD,QAAY,eAAZ,EAAnC,EADF,cAEE,KAAC,IAAD,wBACE,cACE,OAAO,CAAED,YADX,CAEE,SAAS,CAAElB,OAAO,CAACoB,IAFrB,CAGE,QAAQ,CAAEb,iBAHZ,WAKGL,KAAK,CAACmB,SAAN,eACC,YAAK,SAAS,CAAErB,OAAO,CAACsB,OAAxB,uBACE,KAAC,cAAD,IADF,EANJ,cAWE,aAAK,SAAS,CAAEtB,OAAO,CAACuB,OAAxB,wBACE,cAAO,OAAO,CAAC,QAAf,oBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,GAAG,CAAEpB,cAApC,EAFF,GAXF,cAeE,aAAK,SAAS,CAAEH,OAAO,CAACuB,OAAxB,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,iBAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,GAAzB,CAA6B,GAAG,CAAEnB,YAAlC,EAFF,GAfF,cAmBE,YAAK,SAAS,CAAEJ,OAAO,CAACwB,OAAxB,uBACE,eAAQ,OAAO,CAAEP,eAAjB,CAAkC,SAAS,CAAC,KAA5C,uBADF,EAnBF,GADF,EAFF,GADF,CA8BD,CApDD,CAsDA,cAAehB,UAAf"},"metadata":{},"sourceType":"module"}