{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\\\crr7\\\\hamad28\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment, true);\n  const {\n    onAddComment\n  } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddComment();\n    }\n  }, [status, error, onAddComment]);\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({\n      text: enteredText\n    }, props.quteid); // optional: Could validate here\n    // send comment to server\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"yiJFoufpO+Zi9ZUPbqXoFesK8+M=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["useRef","useEffect","useHttp","addComment","LoadingSpinner","classes","NewCommentForm","props","commentTextRef","sendRequest","status","error","onAddComment","submitFormHandler","event","preventDefault","enteredText","current","value","text","quteid","form","control","actions"],"sources":["C:/Users/user/Desktop/react/crr7/hamad28/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { useRef,useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status,error}=useHttp(addComment,true);\n  const {onAddComment}=props;\n  useEffect(()=>{\n    if(status==='completed'&&!error){\n      onAddComment();\n    }\n  },[status,error,onAddComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n   const enteredText=commentTextRef.current.value;\n\n   sendRequest({text:enteredText},props.quteid)\n\n    \n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status==='pending'&&<div className=\"centered\">\n        <LoadingSpinner />\n      </div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAMC,cAAc,GAAGR,MAAM,EAA7B;EACA,MAAM;IAACS,WAAD;IAAcC,MAAd;IAAqBC;EAArB,IAA4BT,OAAO,CAACC,UAAD,EAAY,IAAZ,CAAzC;EACA,MAAM;IAACS;EAAD,IAAeL,KAArB;EACAN,SAAS,CAAC,MAAI;IACZ,IAAGS,MAAM,KAAG,WAAT,IAAsB,CAACC,KAA1B,EAAgC;MAC9BC,YAAY;IACb;EACF,CAJQ,EAIP,CAACF,MAAD,EAAQC,KAAR,EAAcC,YAAd,CAJO,CAAT;;EAMA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;IACnCA,KAAK,CAACC,cAAN;IACD,MAAMC,WAAW,GAACR,cAAc,CAACS,OAAf,CAAuBC,KAAzC;IAEAT,WAAW,CAAC;MAACU,IAAI,EAACH;IAAN,CAAD,EAAoBT,KAAK,CAACa,MAA1B,CAAX,CAJoC,CAOnC;IAEA;EACD,CAVD;;EAYA,oBACE;IAAM,SAAS,EAAEf,OAAO,CAACgB,IAAzB;IAA+B,QAAQ,EAAER,iBAAzC;IAAA,WACGH,MAAM,KAAG,SAAT,iBAAoB;MAAK,SAAS,EAAC,UAAf;MAAA,uBACnB,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADmB;MAAA;MAAA;MAAA;IAAA,QADvB,eAIE;MAAK,SAAS,EAAEL,OAAO,CAACiB,OAAxB;MAAiC,QAAQ,EAAET,iBAA3C;MAAA,wBACE;QAAO,OAAO,EAAC,SAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAU,EAAE,EAAC,SAAb;QAAuB,IAAI,EAAC,GAA5B;QAAgC,GAAG,EAAEL;MAArC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAQE;MAAK,SAAS,EAAEH,OAAO,CAACkB,OAAxB;MAAA,uBACE;QAAQ,SAAS,EAAC,KAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CApCD;;GAAMjB,c;UAE8BJ,O;;;KAF9BI,c;AAsCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}